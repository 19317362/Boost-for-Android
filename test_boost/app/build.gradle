apply plugin: 'com.android.application'

//def my_boost_version()  { return "1.67.0" }
// def my_boost_version =    "1.67.0" ;
def my_boost_version = local_props("boost.version")


// dir where build boots was 'installed' ie  boost_build_dir/1.67.0 should contain a "libs" and an "include" subdir
def my_boost_build_dir = "$projectDir/../../build/boost/" + my_boost_version

// println '.... my message : boost_build_dir = ' + boost_build_dir

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.declan.myapplication"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
                arguments '-DANDROID_STL=c++_shared'
                // this causes libc++_shared.so to get packaged  into .apk

                arguments '-DMY_BOOST_LIBS_DIR=' + my_boost_build_dir + '/libs/'
                arguments '-DMY_BOOST_INC_DIR='  + my_boost_build_dir + '/include/'
                // this doesnt (need to additionally copy required .so files to jniLibs.srcDirs - see below),
                // but still need this here for linking
            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi-v7a' //, 'x86', 'x86_64', 'armeabi', 'arm64-v8a'
        }


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            // this causes all *.so files in ABI (eg "armeabi-v7a") subdir of this dir to get packaged into .apk - relative to "app" dir
             jniLibs.srcDirs = [
                     'src/main/JniLibs/boost/' + my_boost_version
                     ]
             // jniLibs.srcDirs '../../../../mid/lib/android/boost/1.67.0_tst/libs'

        }
    }



}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

//------------------------------------------------------------
def local_props(key) { // reads ~ value from local.properties
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def val = properties.getProperty(key, null)
    if (val == null)
        throw new GradleException("""\
                cant find value '${key}' in file 'local.properties'.  """)

    return val
}
